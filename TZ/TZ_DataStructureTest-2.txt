ТЗ (от 2022-11-28) на создание программы управления структурами данных (DataStructureTest):
 
1. ВВЕДЕНИЕ

2. НАЗНАЧЕНИЕ РАЗРАБОТКИ
Программа DataStructureTest (DS) должна управлять сущностями, соответствующими трем структурам данных - список, связанный список, очередь.
	
3. ТРЕБОВАНИЯ К ПРОГРАММЕ (ОБЩИЕ ТРЕБОВАНИЯ, СОСТАВ, ФУНКЦИОНАЛ)
3.1 ОБЩИЕ ТРЕБОВАНИЯ. В общем случае DS должна выполнять следующие функции:
	1) add()    - добавлять элемент в конец;
	2) remove() - удалять элемент из любой позиции;
	3) pop()    - обращаться к элементу
		- List - на любой позиции
		- LinkedList - на любой позиции
		- Queue - на первой позиции
	4) show()   - просмотр состояния объекта
	5) reset()  - очищать объект (приводить к исходному состоянию)

3.2 СОСТАВ ПРОГРАММЫ. Состав DS должен быть следующий:
3.2.1	Внешняя библиотека List с реализующими методами;
3.2.2	Внешняя библиотека LinkedList с реализующими методами;
3.2.3	Внешняя библиотека Queue с реализующими методами;
3.2.4	интерфейс с сигнатурами методов для обращения к библиотекам ;
3.2.5	класс Test с тестами
3.2.6	класс с фикстурами
3.2.7	класс запускающий, с методом main


3.3	ФУНКЦИОНАЛ ПРОГРАММЫ

3.3.1 	Все операции с объектами любого типа производятся через интерфейс
		Объекты будут хранить элементы типа String
		Один объект конкретной структуры = один экземпляр соответствующего класса
        Объекты создаются путем создания экземпляра соответствующего класса

3.3.2	Интерфейс имеет следующие методы:
		1) public void add(type: item)			- добавить элемент в конец. type - тип элемента, item - значение элемента
		2) public void remove(int: position)	- удалить элемент из любой позиции. position - число, обозначает номер позиции элемента
		3) public String pop()					- обратиться к элементу структуры (см. п. 3.1,3) ) не извлекая его из объекта
		4) public void show()					- просмотреть элементы конкретного объекта
		5) public void reset()					- удалить все элементы в объекте

3.3.3	В каждом типе методы реализуются по своему

5. ТРЕБОВАНИЯ К ПРОГРАММНОЙ ДОКУМЕНТАЦИИ

6. ПОРЯДОК КОНТРОЛЯ И ПРИЕМКИ (описание процесса тестирования ПО):
6.1 Состав тестов (для каждого из типов List/LinkedList/Queue):
    --- Группа тестов A - проверка метода add()
        тест 1
            - создание объекта
            - проверка метода add() - единичное добавление
            - должен появиться 1 элемент
        тест 2
            - создание объекта
            - проверка метода add() 3 раза - 3 добавления подряд
            - должно появиться 3 определенных элемента


    --- Группа тестов B - проверка метода remove()
        тест 1
            - создание объекта
            - добавление 5 определенных элементов
            - проверка метода remove() - удаление одного элемента
            - объект должен иметь 4 элемента в нужном порядке без 1-го (удаленного)
        тест 2
            - создание объекта
            - добавление 5 определенных элементов
            - проверка метода remove() 3 раза - 3 удаления подряд
            - объект должен иметь 2 элемента в нужном порядке без 3-х (удаленных)
        тест 3
            - создание объекта
            - добавление 5 определенных элементов
            - проверка метода remove() 6 раз - 6 удалений подряд
            - на 6-ом удалении должно выйти предупреждение вида "операция недоступна! Объект уже пустой!"


    --- Группа тестов C - проверка метода pop()
        тест 1
            - создание объекта
            - добавление 5 определенных элементов
            - проверка метода pop() - прочитать крайний элемент (позиция зависит от типа объекта)
            - должен вернуться определенный элемент


    --- Группа тестов D - проверка метода show()
        тест 1
            - создание объекта
            - добавление 5 определенных элементов
            - проверка метода show() - вывести все элементы объекта
            - должен вернуться объект в развернутом виде и совпадать с заданным массивом

    --- Группа тестов E - проверка метода reset()
        тест 1
            - создание объекта
            - добавление 5 определенных элементов
            - проверка метода reset() - удалить все элементы и сделать объект пустым
            - должен вернуться объект с количеством элементов равным 0
